// Module csv provides functions to read and write data in CSV format.

// Opts requires 1 argument, the path of the file to be parsed. 2 other
// optional arguments are available. firstLineHeader (default: true) indicates
// whether or not the first line of the file is a header, and delimiter 
// (default: ",") which indicates the record delimiter.
class Opts {

    init(var path, var firstLineHeader=false, var delimiter=",") {
        this.path = path;
        this.firstLineHeader = firstLineHeader;
        this.delimiter = delimiter;
    }
}

// Parser opens the file in the given path, parses each line and record, and
// saves them to a list and returns it.
class Parser {

    init(var opts) {
        this.opts = opts;
    }

    parse() {
       var data = [];

        with(this.opts.path, "r") {
            var line;
            var lineNum = 0;
            var startLine = 0;

            if (this.opts.firstLineHeader) {
                startLine = 1;
            }

            while((line = file.readLine()) != nil) {
                var record = line.split(this.opts.delimiter);
                
                for (var i = startLine; i < record.len(); i += 1) {
                    record[i] = record[i].strip();
                }

                data.push(record);
            }
        }

        return data;
    }

    // write
    write(data) {
        if (data == "") {
            return Error("given data empty");
        }

        with(this.opts.path, "w") {

        }
    }

    // writeAll
    writeAll(data) {
        if (data.len() == 0) {
            return Error("given data empty");
        }

        with(this.opts.path, "w") {

        }
    }
}
