import JSON;
import "mod.du" as bases;

@ClassA("asdf1234")
class A {
    @FieldA
    var a = "asdf333";

    @MethodA(0)
    methodA() {}
}

@ClassB(7)
class B < A {
    @FieldB("lklk")
    var b = 999;

    init() {
        print("class B annotations: {}".format(this._class.classAnnotations));
        print("method annotations: {}".format(this._class.methodAnnotations));
        print("field annotations: {}".format(this._class.fieldAnnotations));
    }

    @MethodB
    methodB() {}
}

const a = A();
print("Class A: {}".format(a._class.classAnnotations));
print("Class A: {}".format(a._class.methodAnnotations));
print("Class A: {}".format(a._class.fieldAnnotations));
const b = B();
print("Class B: {}".format(b._class.classAnnotations));
print("Class B: {}".format(b._class.methodAnnotations));
print("Class B: {}".format(b._class.fieldAnnotations));

// class D {
//     init() {}

//     modMeth() {
//         print("we're in!");
//     }
// }


// class Dog < bases.Animal {
//     init() {

//     }

//     meth() {}
// }

// const dog = Dog();
// dog.speak("woof!");

// class C {
//     init() {}
// }

// class JSON {
//     init() {
//         this.c = C();
//     }
// }

// class Ugh < JSON {}

// {
//     const ugh = Ugh();
// }
